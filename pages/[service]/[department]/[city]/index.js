import { Fragment } from 'react'
import Head from 'next/head'
import { useEffect } from 'react'
import Image from 'next/image'

function classNames(...classes) {
    return classes.filter(Boolean).join(' ')
}

const TopPage = ({ image, title, blur, children, height, alt }) => {

    const handleScroll = (e) => {
        const title = document.getElementById('title');
        const image = document.getElementById('image');
        if (image)
            image.style.transform = `translateY(${window.scrollY / 6}px)`;
    };

    useEffect(() => {
        window.addEventListener('scroll', handleScroll);
        return () => window.removeEventListener('scroll', handleScroll);
    });

    return (
        <div className={classNames(!image ? "bg-green-700" : "", "flex relative w-150 h-[300px] md:h-[400px] lg:h-[500px] xl:h-[600px] justify-center overflow-hidden mb-8")}>
            {image &&
                (<Image
                    id='image'
                    src={image}
                    alt={alt ?? 'Image'}
                    style={{ objectFit: "cover", filter: blur ?? "blur(8px)", zIndex: 0 }}
                    fill={true}
                    priority
                />)}
            <div className="absolute inset-0 bg-gradient-to-t from-black/70"></div>
            <div className="absolute mx-auto sm:px-6 lg:px-8 px-20 container h-full pb-10 flex flex-row items-center justify-center lg:justify-start w-full">
                {title &&
                    (<h1 id="title" className="text-5xl font-extrabold text-white lg:text-left text-center bg-green-800 p-5">
                        {title}
                    </h1>)}
                {children}
            </div>
            <div className="absolute w-screen h-1/4 -bottom-[14%] skew-y-[1.3deg] bg-gray-200 drop-shadow-[0_2px_10px_rgba(0,0,0,0.1)]"></div>
            <div className="absolute w-screen h-1/4 -bottom-[17%] -skew-y-[1.6deg] bg-gray-50 drop-shadow-[0_2px_10px_rgba(0,0,0,0.1)]"></div>
        </div>
    )
}


export async function getStaticPaths() {
    const res = await fetch('http://localhost:3000/api/departments')
    const res_services = await fetch('http://localhost:3000/api/services')
    const departments = await res.json()
    const services = await res_services.json()
    const paths = departments.reduce((acc, department) => {
        department.cities.forEach((city) => {
            services.forEach((service) => {

                acc.push({
                    params: { department: department.slug.toString(), city: city.slug.toString(), service: service.slug.toString() },
                })
            })
        })
        return acc
    }, [])
    console.log(paths);
    return { paths, fallback: false }
}

export async function getStaticProps(context) {
    const { service, department, city } = context.params;
    const res = await fetch(`http://localhost:3000/api/${department}/${city}`)
    const res_service = await fetch(`http://localhost:3000/api/services/${service}`)
    const res_department = await fetch(`http://localhost:3000/api/${department}`)
    const jservice = await res_service.json()
    const jdepartment = await res_department.json()
    const data = await res.json()

    const SITE_NAME = process.env.SITE_NAME

    return {
        props: { service: jservice, department: jdepartment, city: data, SITE_NAME }
    }
}

const City = ({ service, department, city, SITE_NAME }) => {
    // const src = 'https://api.mapbox.com/styles/v1/thepiotrow/clbjootsb000x14p187hxu9pj/static/2.45464180851064,48.772986382978715,12,0,60/1280x800@2x?access_token=pk.eyJ1IjoidGhlcGlvdHJvdyIsImEiOiJjbGJpb3V1aGUwaHcxM3htbHo5MTgyeDlyIn0.0IPrcAlSv_dajoimf1ud1g'
    // const src = 'https://api.mapbox.com/styles/v1/thepiotrow/clcl2jqbg001o14t2v8due4rp/static/2.45464180851064,48.772986382978715,12,0,60/1280x800@2x?access_token=pk.eyJ1IjoidGhlcGlvdHJvdyIsImEiOiJjbGJpb3V1aGUwaHcxM3htbHo5MTgyeDlyIn0.0IPrcAlSv_dajoimf1ud1g'
    // const src = 'https://api.mapbox.com/styles/v1/thepiotrow/clcl2rxu8002g15mur0gldpyn/static/2.45464180851064,48.772986382978715,12,0,60/1280x800@2x?access_token=pk.eyJ1IjoidGhlcGlvdHJvdyIsImEiOiJjbGJpb3V1aGUwaHcxM3htbHo5MTgyeDlyIn0.0IPrcAlSv_dajoimf1ud1g'
    // const src = 'https://api.mapbox.com/styles/v1/thepiotrow/clbiq01go000t14n24d36r87e/static/2.45464180851064,48.772986382978715,12,0,60/1280x800@2x?access_token=pk.eyJ1IjoidGhlcGlvdHJvdyIsImEiOiJjbGJpb3V1aGUwaHcxM3htbHo5MTgyeDlyIn0.0IPrcAlSv_dajoimf1ud1g'
    return (
        <Fragment>
            <Head>
                <title>{`${SITE_NAME} | ${service.name} à ${city.name} (${department.code})`}</title>
                <link rel="icon" href="/favicon.ico" />
                <meta name="description" content="Generated by create next app" />
            </Head>

            <TopPage alt={`Vue aérienne de la ville de ${city.name}`} image={`/images/${department.slug}_${city.slug}.png`} title={`${service.name} à ${city.name} (${department.code})`} blur="false" />
            <div className="flex min-h-[50vh] flex-col items-center pb-2 ">
                <main className="container z-30 text-center rounded-md pt-16 px-10">
                    <h1 className='text-5xl z-40 mb-16 text-start'>
                        <div className="absolute inset-x-0 h-[300px] skew-y-[0.75deg] bg-green-700 drop-shadow-[0_2px_10px_rgba(0,0,0,0.1)]">
                            <div className="absolute inset-x-0 top-10 h-[200px] -skew-y-[1.4deg] bg-green-600 drop-shadow-[0_2px_10px_rgba(0,0,0,0.1)]">
                            </div>
                        </div>
                        <div className='skew-y-0 font-bold text-white pt-24'>
                            Nous allons jusqu'à chez vous !
                        </div>
                    </h1>
                    <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 gap-5 py-12">

                    </div>
                </main>
            </div >
        </Fragment>
    )
}

export default City
